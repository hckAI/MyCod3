
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

class Person{
    public:
    string name;
    int age;
    virtual void getdata()
    {
        cin>>age>>name;
    }
    virtual void putdata()
    {
        cout<<name<<" "<<age<<"\n";
    }
};

class Professor: public Person
{
    public:
    Professor()
    {
    cur_id = ++id;
    }
    int publication;
    static int id;
    int cur_id;
    void getdata()
    {
        cin>>name>>age>>publication;
    }
    void putdata()
    {
        cout<<name<<" "<<age<<" "<<publication<<" "<<cur_id<<"\n";
    }
};
int Professor::id=0;

class Student: public Person
{
    public:
    ;
    Student()
    {
        cur_id = ++id;
    }
    int marks[6];
    static int id;
    int cur_id;
    void getdata()
    {
        cin>>name >>age;
        for(int i=0; i<6; i++)
        {
            cin>>marks[i];
        }
    }
    void putdata()
    {
        //cur_id = 2;
        int temp = 0;
        for(int i=0; i<6; i++)
        {
            temp += marks[i];
        }
        cout<<name <<" " <<age <<" " <<temp <<" "<<cur_id<<"\n";
    }
};
int Student::id=0;


int main(){

    int n, val;
    cin>>n; //The number of objects that is going to be created.
    Person *per[n];

    for(int i = 0;i < n;i++){

        cin>>val;
        if(val == 1){
            // If val is 1 current object is of type Professor
            per[i] = new Professor;

        }
        else per[i] = new Student; // Else the current object is of type Student

        per[i]->getdata(); // Get the data from the user.

    }

    for(int i=0;i<n;i++)
        per[i]->putdata(); // Print the required output for each object.

    return 0;

}
